"""
Django settings for petapi project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-m@5jizi%0nm68f*mi4*c(x$v2x8r+3t8pjdt4qy44_o+$5kxhl"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['petapp.billilo.com','localhost','145.223.100.167:8090']
# Redirect HTTP requests to HTTPS
SECURE_SSL_REDIRECT = False


SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "petapp",
    "corsheaders",
    "rest_framework",
    "rest_framework_simplejwt",
]

CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "petapi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "petapi.wsgi.application"
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [
#     "https://billilo.vercel.app/",
# ]
CORS_ORIGIN_ALLOW_ALL = True

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
    "default":{
        "ENGINE":"django.db.backends.mysql",
        "NAME":"petapp",
        "USER":"petapp",
        "PASSWORD":"mbi0TbI5X6wqeYBWxxGp",
        "HOST":"localhost",
        "PORT":3306
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
import os
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER="subtainkhan5656@gmail.com"
EMAIL_HOST_PASSWORD="hecz extr wpzx inyw"

# Secondary email configuration
SECONDARY_EMAIL_HOST_USER = "subtainkhan5656@gmail.com"
SECONDARY_EMAIL_HOST_PASSWORD = "hecz extr wpzx inyw"

# Custom function to switch email settings dynamically
def set_email_config(primary=True):
    """
    Configure email settings dynamically.
    :param primary: If True, use the primary email. Otherwise, use the secondary email.
    :return: A dictionary containing email settings.
    """
    
    if primary:
        EMAIL_SETTINGS = {
            "EMAIL_HOST_USER": SECONDARY_EMAIL_HOST_USER,
            "EMAIL_HOST_PASSWORD": SECONDARY_EMAIL_HOST_PASSWORD,
        }
    else:
        EMAIL_SETTINGS = {
            "EMAIL_HOST_USER": EMAIL_HOST_USER,
            "EMAIL_HOST_PASSWORD": EMAIL_HOST_PASSWORD,
        }
    return EMAIL_SETTINGS
import firebase_admin
from firebase_admin import credentials

cred = credentials.Certificate("petapi/notifications-533b6-firebase-adminsdk-f3nbz-2f2d848ec8.json")
firebase_admin.initialize_app(cred)
FCM_SENDER_ID = '261811276322'

